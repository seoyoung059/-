function [D] = Psensor(T,head,a,b,rr,onum) % 맵과 방향 처음 위치를 받는다.
 %T는 센서의 위치(위치좌표)
 %head는 센서의 방향
 %(a,b)는 장애물 위치
 %rr은 장애물 크기(반지름)
 %onum은 장애물의 개수
 %Mdistance(a,b,X,Y,onum)는 장애물과의 거리/장애물 번호/장애물과의 접촉 여부
 
 coli=0;
 noise =5; % noise(%)
 C = 61;
 stop =0;
 
for i = 1:1:13
    if (stop == 0)        
        X = T(1) + 5*(i-1)*cos(head);       %5mm씩 각 센서에 주어진 방향으로 이동
        Y = T(2) + 5*(i-1)*sin(head);
        if((X>=30)&&(X<=1070)&&(Y>=30)&&(Y<=1070))   % 1차 감지 지점이 공간 안에 있을 때
            [d, k, coli] = Mdistance(a,b,rr,X,Y,onum,coli); %장애물 또는 벽과의 거리/번호/접촉 여부 확인
            if(coli==1)                                     % 장애물에 닿았다면
                stop=1;                                     %멈춤
                C = 5*(i-1);                                % 1차 감지 시점 위치 (센서에서 멀어지는 방향)
                                                            % i가 1부터 시작하므로
                                                            % C는 센서 위치 기준
                                                            % -5mm부터 시작함??
                for t = 1:1:5                               %1mm 단위의 2차 감지 지점으로 장애물 표면 찾기
                    X = X-t*cos(head);
                    Y = Y-t*sin(head);
                    [d, k, coli] = Mdistance(a,b,rr,X,Y,onum,coli); %1mm 단위로 장애물 확인
                    if(coli==0)                                     %확인지점에 장애물 없으면
                        C = C-t;                            % 2차 감지 시점 위치 (센서에서 가까워지는 방향)
                    end
                end
            end
        else                                % 1차 감지 지점이 공간 바깥일 때
            C = 5*(i-1);                    % 1차 감지 지점 위치
            xx = X;
            yy = Y;
            for t = 1:1:5                   %1mm 단위 2차 감지 지점으로 벽의 끝자리 찾음
                X = xx-t*cos(head);         
                Y = yy-t*sin(head);
                if((X>=30)&&(X<=1070)&&(Y>=30)&&(Y<=1070))&&(stop ==0)
                    C = C-t;                % 2차 감지 시점 위치
                    stop = 1;
                end
            end
        end
     end
end
 
     % Tmp는 센서 값
     if (C <= 20)   % 벽/장애물 - 센서 거리: 15mm 이내 
          Tmp = 1023;
     elseif ((C <=25)&&(C > 20))    % 벽/장애물 - 센서 거리: 15~20mm 
           Tmp = 1023 - (((1023-756)/5)*(C-20));
     elseif ((C <= 30)&&(C > 25))   % 벽/장애물 - 센서 거리: 20~25mm 
           Tmp = 756 - (((756-400)/5)*(C-25));  
     elseif ((C <=35)&&(C >30))     % 벽/장애물 - 센서 거리: 25~30mm
           Tmp = 400 - (((400-260)/5)*(C-30));   
     elseif ((C <=40)&&(C >35))     % 벽/장애물 - 센서 거리: 30~35mm 
           Tmp = 260 - (((260-145)/5)*(C-35));   
     elseif ((C <=45)&&(C >40))     % 벽/장애물 - 센서 거리: 35~40mm 
           Tmp = 145 - (((145-92)/5)*(C-40));  
     elseif ((C <=50)&&(C >45))     % 벽/장애물 - 센서 거리: 40~45mm
           Tmp = 92 - (((92-74)/5)*(C-45));   
     elseif ((C <=55)&&(C >50))     % 벽/장애물 - 센서 거리: 45~50mm 
           Tmp = 74 - (((74-60)/5)*(C-50));  
     elseif ((C <=60)&&(C > 55))     % 벽/장애물 - 센서 거리: 50~55mm
           Tmp = 60 - (((60-48)/5)*(C-55)); 
     else                           % 벽/장애물 - 센서 거리: 55mm 바깥 
            Tmp = 0;    
     end

  D =Tmp + noise/100*(2*rand - 1)*1024;  %noise
  if D > 1023
        D = 1023;
  elseif D < 0 
        D = 0;
  end
 
end